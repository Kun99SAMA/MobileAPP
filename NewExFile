public class GetPhoneContacts {
    public static List<PhoneEntity> list = new ArrayList<PhoneEntity>();

    public static String getNumber(Context context) {
        Cursor cursor = context.getContentResolver().query(Phone.CONTENT_URI, null, null, null, null);
        String phoneNumber;
        String phoneName;
        //while(cursor.moveToNext()){}这两种遍历方式一样
        for (cursor.moveToFirst(); !cursor.isAfterLast(); cursor.moveToNext()) {
            phoneNumber = cursor.getString(cursor.getColumnIndex(Phone.NUMBER));
            phoneName = cursor.getString(cursor.getColumnIndex(Phone.DISPLAY_NAME));
            System.out.println("phoneNumber:" + phoneNumber + "phoneName:" + phoneName);
            PhoneEntity phoneEntity = new PhoneEntity(phoneNumber, phoneName);
            list.add(phoneEntity);
        }
        return null;
    }
}

public class MyAdapter extends BaseAdapter{
    private Context context;
    private List<PhoneEntity> lists;
    private LinearLayout layout;
    public MyAdapter(Context context,List<PhoneEntity> lists){
        this.context=context;
        this.lists=lists;
    }
    //返回列表的显示项，跟传进来的list数据数目一致。
    @Override
    public int getCount() {
        return lists.size();
    }

    /* (non-Javadoc)
     * @see android.widget.Adapter#getItem(int)
     */
    //返回当前项
    @Override
    public Object getItem(int position) {
        return lists.get(position);
    }

    /* (non-Javadoc)
     * @see android.widget.Adapter#getItemId(int)
     */
    //返回当前项的索引
    @Override
    public long getItemId(int position) {

        return position;
    }

    /* (non-Javadoc)
     * @see android.widget.Adapter#getView(int, android.view.View, android.view.ViewGroup)
     */
    //得到布局视图
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        //得到布局加载器
        LayoutInflater inflater = LayoutInflater.from(context);
        //加载得到item每一项的布局
        layout = (LinearLayout) inflater.inflate(R.layout.list_item_phone, null);
        //通过视图得到控件
        TextView phoneNumTv = (TextView) layout.findViewById(R.id.tx_phoneNumber);
        TextView phoneNameTv = (TextView) layout.findViewById(R.id.tx_phoneName);
        //为控件填充数据
        phoneNumTv.setText(lists.get(position).getPhoneNumber());
        phoneNameTv.setText(lists.get(position).getPhoneName());
        return layout;
    }
}




public class MainActivity extends AppCompatActivity {

    private  MyDatabaseHelper dbHelper;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final TextView textView = findViewById(R.id.textView);
        dbHelper = new MyDatabaseHelper(this,"student.db",null,1);
        Button createDatabase = (Button)findViewById(R.id.create_database);

        createDatabase.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v){dbHelper.getWritableDatabase();}});

        Button addData = (Button)findViewById(R.id.add_data);
        addData.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SQLiteDatabase db=dbHelper.getWritableDatabase();
                ContentValues values = new ContentValues();//临时变量
                values.put("stuName","性别");
                values.put("stuNumber","10");
                values.put("stuAge",21);
                values.put("stuAddress","姓名");
                values.put("stuColleage","联系电话");
                values.put("stuRemarks","删除");
                db.insert("Student",null,values);// 插入第一条数据
                values.clear();// 开始插入第二条数据
                values.put("stuName","GDPU");
                values.put("stuRemarks","");
                db.insert("student",null,values);
            }
        });

        Button updataData = (Button)findViewById(R.id.updata_data);
        updataData.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SQLiteDatabase db = dbHelper.getWritableDatabase();
                ContentValues values = new ContentValues();
                values.put("stuColleage","GDPU");
                db.update("student", values,null,null);
            }
        });

        Button deleteButton = (Button) findViewById(R.id.delete_data);
        deleteButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SQLiteDatabase db = dbHelper.getWritableDatabase();
                db.delete("student","stuName=?",new String[]{"GDPU"});
                //删除一个数据
            }
        });

        Button queryButton= (Button) findViewById(R.id.query_data);
        queryButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SQLiteDatabase db = dbHelper.getWritableDatabase();
                // 查询Student表中所有的数据
                Cursor cursor = db.query("student",null,null,null,null,null,null);
                StringBuilder content = new StringBuilder(); //转义字符
                content.append("id"+"\t\t"+"stuName"+"\t\t"+
                        "stuNumber"+"\t\t"+"stuAge"+"\t\t"
                        +"stuAddress"+"\t\t" +"stuColleage"+"\t\t"+"stuRemarks"+"\n");
                if(cursor.moveToFirst()){
                    do{
                        // 遍历Cursor对象，取出数据并打印
                        int id = cursor.getInt(cursor.getColumnIndex("id"));
                        String stuName = cursor.getString(cursor.getColumnIndex("stuName"));
                        String stuNumber = cursor.getString(cursor.getColumnIndex("stuNumber"));
                        int stuAge = cursor.getInt(cursor.getColumnIndex("stuAge"));
                        String stuAddress = cursor.getString(cursor.getColumnIndex("stuAddress"));
                        String stuColleage = cursor.getString(cursor.getColumnIndex("stuColleage"));
                        String stuRemarks = cursor.getString(cursor.getColumnIndex("stuRemarks"));
                        content.append(id+"\t\t"+stuName+"\t\t\t\t"+
                                stuNumber+"\t\t\t\t\t"+stuAge+"\t\t\t\t\t\t\t"
                                +stuAddress+"\t\t\t" +stuColleage+"\t\t\t\t"+stuRemarks+"\n");
                    }while(cursor.moveToNext());
                }
                cursor.close();
                textView.setText(content.toString());
            }
        });
    }
}
